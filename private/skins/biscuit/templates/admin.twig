{% extends "_layout.twig" %}

{% set title = "Admin dashboard" %}

	{% block content %}
		<div class="tabs">
			<button class="tablink" data-tab="tab1">Statistics</button>
			<button class="tablink" data-tab="tab2">Bans</button>
			{% if invite_keys_enabled %}
			<button class="tablink" data-tab="tab3">Invite keys</button>
			{% endif %}

			<div id="tab1" class="tabcontent">
				<div class="grid">
					<div class="col-6">
						<div class="content-box">
							<h1>Over the years</h1>
							<span>Since {{ data.time.formatted_date }} ({{ data.time.relative_days }} days ago)</span>
							<canvas id="cumulativeChart"></canvas>
						</div>
					</div>
					<div class="col-6">
						<div class="content-box">
							<h1>Views</h1>
							<canvas id="viewChart"></canvas>
						</div>
					</div>
				</div>
				<br>
				<div class="content-box">
					<h1>Statistics</h1>
					<ul>
						<li>Uname: {{ data.system.uname }}</li>
						{% for key, number in data.numbers %}
							<li>{{ key }}: {{ number }}</li>
						{% endfor %}
					</ul>
				</div>
			</div>

			<div id="tab2" class="tabcontent">
				<div class="content-box">
					<h1>Ban User</h1>
					<form id="banForm" method="post" action="admin" enctype="multipart/form-data">
						<div class="banner banner-secondary">
							<strong>NOTE</strong>: We currently don't support expirable bans.
						</div>
						<input type="hidden" name="action" value="ban_user" />
						<div class="form-input">
							<label for="user_to_ban">Username:</label>
							<input type="text" id="user_to_ban" name="user_to_ban" class="form-submit" required>
							<label for="reason">Reason:</label>
							<input type="text" id="reason" name="reason" class="form-submit" required>
						</div>
						<div class="form-button-container">
							<input type="submit" id="upload" name="upload" class="button button-danger" value="Ban">
						</div>
					</form>
				</div>
				<br>
				<div class="content-box">
					<h1>Banned Users</h1>
					<div class="banner banner-secondary">
						<strong>NOTE</strong>: If the account gets automatically banned after being unbanned, then the account's latest IP is IP banned.
					</div>
					<table class="c1">
						<thead>
						<tr class="h">
							<th style="width:150px">Username</th>
							<th>Reason</th>
							<th style="width:70px">Unban</th>
						</tr>
						</thead>
						<tbody>
						{% for user in data.bans %}
							<tr style="height: 30px;">
								<td>{{ user.name }}</td>
								<td>
									{{ user.ban_reason }}
									<small>({{ user.ban_time | date('F j, Y') }}/{{ user.ban_time | relative_time }})</small>
								</td>
								<td><a href="/admin?action=unban_user&user={{ user.id }}" class="button button-secondary">Unban</a></td>
							</tr>
						{% endfor %}
						</tbody>
					</table>
				</div>
			</div>

			{% if invite_keys_enabled %}
				<div id="tab3" class="tabcontent">
					<div class="content-box centered">
						<form name="inviteKeyGenerationForm" id="inviteKeyGenerationForm" method="post" action="admin" enctype="multipart/form-data">
							<input type="hidden" id="action" name="action" value="generate_invite_key" />
								<input class="button button-primary button-huge" type="submit" id="generate" name="generate"
									   value="Generate invite key">
						</form>
						<p>
							If you give an invitation key to a bad actor, you <strong>will</strong> be demoted.
						</p>
					</div>
					<br>
					<div class="content-box">
						<h1>All invite keys</h1>
						<table class="c1">
							<tr class="h">
								<th style="width:200px">Invite Key</th>
								<th>Generated By</th>
								<th>Claimed By</th>
							</tr>
							{% for inviteKey in data.invites %}
								<tr style="height: 30px;">
									<td>{{ inviteKey.invite_key }}</td>
									<td>
										{{ inviteKey.generated_by.name }}
										<small>({{ inviteKey.generated_time | date('F j, Y') }}/{{ inviteKey.generated_time | relative_time }})</small>
									</td>
									<td>
										{% if inviteKey.claimed_by %}
											{{ inviteKey.claimed_by.name }}
											<small>({{ inviteKey.claimed_time | date('F j, Y') }}/{{ inviteKey.claimed_time | relative_time }})</small>
										{% else %}
											Not claimed
										{% endif %}
									</td>
								</tr>
							{% endfor %}
						</table>
					</div>
				</div>
			{% endif %}

		</div>
	{% endblock %}

{% block scripts %}
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>

	<script>
		const cumulativeChart = document.getElementById('cumulativeChart');
		const viewChart = document.getElementById('viewChart');

		new Chart(cumulativeChart, {
			type: 'line',
			data: {
				datasets: [
					{
						label: 'Uploads',
						data: [
							{% for graph in data.graph_data.submissions %}
							{
								x: "{{ graph.time }}",
								y: {{ graph.runningTotal }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
					{
						label: 'Users',
						data: [
							{% for graph in data.graph_data.users %}
							{
								x: "{{ graph.joined }}",
								y: {{ graph.runningTotal }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
					{
						label: 'Comments',
						data: [
							{% for graph in data.graph_data.comments %}
							{
								x: "{{ graph.date }}",
								y: {{ graph.runningTotal }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
					{
						label: 'Journals',
						data: [
							{% for graph in data.graph_data.journals %}
							{
								x: "{{ graph.date }}",
								y: {{ graph.runningTotal }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
				]
			},
			options: {
				elements: {
					point: {
						radius: 0
					}
				},
				scales: {
					y: {
						beginAtZero: true
					},
					{% if is_chaziz_sb %}
					x: {
						type: 'time',
						min: '2021-01-30 00:00:00',
					}
					{% else %}
					x: {
						type: 'time',
					}
					{% endif %}
				}
			}
		});

		new Chart(viewChart, {
			type: 'line',
			data: {
				datasets: [
					{
						label: 'Logged-in views',
						data: [
							{% for graph in data.graph_data.views %}
							{
								x: "{{ graph.date }}",
								y: {{ graph.user_views }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
					{
						label: 'Logged-out views',
						data: [
							{% for graph in data.graph_data.views %}
							{
								x: "{{ graph.date }}",
								y: {{ graph.guest_views }},
							},
							{% endfor %}
						],
						borderWidth: 1
					},
				]
			},
			options: {
				elements: {
					point: {
						radius: 0
					}
				},
				scales: {
					y: {
						beginAtZero: true
					},
					x: {
						type: 'time',
					}
				}
			}
		});
	</script>
{% endblock %}