{% extends "_layout.twig" %}

{% set title = "Chat" %}

{% block precontent %}
    {% if current_theme == "default" %}
        <div class="jumbotron page-banner">
            <div class="jumbotron-container">
                <div>
                    <h1>Chat (beta)</h1>
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block scripts %}
    <script>
        let websocket;

        document.addEventListener("DOMContentLoaded", function(event) {
            connectWebSocket(); // Connect WebSocket when the page loads
        });

        async function connectWebSocket() {
            if (websocket) {
                websocket.close();
            }

            websocket = new WebSocket("{{ url }}");

            websocket.onopen = function(event) {
                console.log("WebSocket connected");
                sendToken();
            };

            websocket.onmessage = async function(event) {
                let chatbox = document.getElementById("chatbox");
                let message = document.createElement("div");
                let data = JSON.parse(event.data);

                function getClientDisplayName(client) {
                    switch (client) {
                        case 'blockland':
                            return 'Blockland';
                        case 'squarebracket':
                            return 'squareBracket';
                        case 'discord':
                            return 'Discord';
                        default:
                            return client;
                    }
                }

                if (data.notification) {
                    let clientDisplayName = getClientDisplayName(data.client);
                    message.textContent = `[${clientDisplayName}] ${data.notification}`;
                    message.style.color = "gray";
                } else if (data.error) {
                    message.textContent = `Error: ${data.error}`;
                    message.style.color = "red";
                    play('error');
                } else if (data.warning) {
                    message.textContent = `Warning: ${data.warning}`;
                    message.style.color = "orange";
                    play('error');
                } else {
                    let clientDisplayName = getClientDisplayName(data.client);
                    message.textContent = `[${clientDisplayName}] ${data.username}: ${data.message}`;
                    if (data.username === "{{ user_data.name }}") {
                        play('comment');
                    } else {
                        play('notify');
                    }
                }

                chatbox.appendChild(message);
                chatbox.scrollTop = chatbox.scrollHeight;
            };

            websocket.onerror = function(event) {
                console.error("WebSocket error:", event);
            };

            websocket.onclose = function(event) {
                console.log("WebSocket closed:", event);
            };
        }

        async function sendToken() {
            let message = JSON.stringify({token: "{{ user_data.token }}"});
            websocket.send(message);
        }

        addEventListener("keypress", (event) => {
            if (event.code === "Enter") {
                sendMessage();
            }
        });

        function sendMessage() {
            let input = document.getElementById("message");
            if (input.value.trim() === "") {
                return;
            }
            let message = JSON.stringify({message: input.value});
            websocket.send(message);
            input.value = "";
        }
    </script>
{% endblock %}

{% block content %}
    <div id="chatbox"></div>
    <div class="chat-send-shit">
        <input type="text" id="message" class="input">
        <button onclick="sendMessage()" class="button button-primary">Send</button>
    </div>
{% endblock %}