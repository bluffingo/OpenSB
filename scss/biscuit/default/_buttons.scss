.button {
  padding: $button-padding;
  text-align: center;
  border-radius: 5px;
  color: white;
  font-family: $font;
  display: inline-block;
  cursor: pointer;
  text-decoration: none;
  box-shadow: 0 1px 0 rgba(black, 0.2);
  text-shadow: 0 -1px 0 rgba(black, 0.4);
  font-weight: bold;
  background-repeat: repeat-x;

  &:hover {
    text-decoration: none;
  }

  &.button-small {
    padding: $button-padding-small;
  }

  &.button-big {
    font-size: 15px;
    padding: $button-padding-big;
    border-radius: 5px;
  }

  &.button-huge {
    font-size: 32px;
    padding: $button-padding-huge;
    border-radius: 10px;
  }
}

@each $color, $value in $color-map {
  .button-#{$color} {
    border: 1px solid adjust-hue(darken($value, 4%), 6);
    background-color: $value;
    @include gradient-y($start-color: adjust-hue(lighten($value, 9%), 2), $end-color: adjust-hue(darken($value, 6%), 6));

    color: contrast-color($value, #000, #fff);
    text-shadow: 0 -1px 0 rgba(black, 0.4);

    &:hover {
      background-color: lighten($value, 10%);
      @include gradient-y($start-color: adjust-hue(lighten($value, 15%), 1), $end-color: adjust-hue(darken($value, 2.5%), 2));
      border-color: darken($value, 5%);
    }

    &:active {
      background-color: darken($value, 5%);
      @include gradient-y($start-color: $value, $end-color: adjust-hue(darken($value, 7%), 4));
      border-color: darken($value, 12%);
    }

    @if $color == "secondary" {
      text-shadow: none;
      font-weight: normal;
    }
  }
}

// hardcoded button for main page. it's not in the color map because its defined in a way that won't really work with
// how the other buttons are done without massively fucking things up. -chaziz 6/28/2024
$value: #ffa60a;

.button-get-started {
  border: 1px solid adjust-hue(darken($value, 4%), -6);
  background-color: $value;
  @include gradient-y($start-color: adjust-hue(lighten($value, 12%), 6), $end-color: adjust-hue(darken($value, 4%), -6));
  color: #15110e;
  text-shadow: 0 -1px 0 rgba(white, 0.4);

  &:hover {
    background-color: lighten($value, 10%);
    @include gradient-y($start-color: adjust-hue(lighten($value, 15%), 8), $end-color: adjust-hue(lighten($value, 4.5%), -2));
    border-color: darken($value, 10%);
  }

  &:active {
    background-color: darken($value, 5%);
    @include gradient-y($start-color: $value, $end-color: adjust-hue(darken($value, 5%), -4));
    border-color: darken($value, 12%);
  }
}